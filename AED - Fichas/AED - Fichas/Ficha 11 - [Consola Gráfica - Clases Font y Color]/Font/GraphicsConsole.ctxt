#BlueJ class context
comment0.target=GraphicsConsole()
comment1.target=void\ setMenu()
comment10.params=x\ y\ width\ height\ raised
comment10.target=void\ draw3DRect(int,\ int,\ int,\ int,\ boolean)
comment10.text=\nDibuja\ el\ contorno\ de\ un\ rect\u00E1ngulo\ con\ bordes\ trabajados\ para\ simular\ un\ \nefecto\ de\ sobre\ relieve\ (raised\ \=\ true)\ o\ bajo\ relieve\ (raised\ \=\ false).\nLos\ l\u00EDmites\ izquierdo\ y\ derecho\ del\ rect\u00E1ngulo\ son\ (x)\ y\ (x\ +\ width)\ \nrespectivamente,\ aunque\ gr\u00E1ficamente\ el\ rect\u00E1ngulo\ acupar\u00E1\ un\ \u00E1rea\ que\ \nllegar\u00E1\ hasta\ (width\ +\ 1)\ y\ (height\ +\ 1).\ Los\ l\u00EDmites\ superior\ e\ inferior\ \ndel\ rect\u00E1ngulo\ son\ (y)\ y\ (y\ +\ height)\ respectivamente.\ El\ color\ usado\ ser\u00E1\ \nel\ que\ en\ ese\ momento\ est\u00E9\ fijado\ como\ color\ de\ dibujo\ para\ la\ ventana.\n@param\ x\ coordenada\ de\ columna\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ y\ coordenada\ de\ fila\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ width\ ancho\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ height\ alto\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ raised\ un\ boolean\ para\ indicar\ si\ el\ rect\u00E1ngulo\ debe\ aparecer\ elevado\ o\nhundido\ en\ la\ ventana.\n\n
comment11.params=x\ y\ width\ height\ startAngle\ arcAngle
comment11.target=void\ drawArc(int,\ int,\ int,\ int,\ int,\ int)
comment11.text=\nDibuja\ el\ contorno\ de\ un\ arco\ circular\ o\ el\u00EDptico,\ dentro\ de\ los\ l\u00EDmites\ \ndel\ rect\u00E1ngulo\ indicado.\ Los\ l\u00EDmites\ izquierdo\ y\ derecho\ del\ rect\u00E1ngulo\ \nson\ (x)\ y\ (x\ +\ width)\ respectivamente.\ Los\ l\u00EDmites\ superior\ e\ inferior\ \ndel\ rect\u00E1ngulo\ son\ (y)\ y\ (y\ +\ height)\ respectivamente.\ El\ arco\ comienza\ \na\ dibujarse\ desde\ el\ \u00E1ngulo\ indicado\ por\ (startAngle)\ y\ proseguir\u00E1\ hasta\nbarrer\ un\ \u00E1ngulo\ equivalente\ a\ (arcAngle).\ El\ color\ usado\ ser\u00E1\ el\ que\ en\ \nese\ momento\ est\u00E9\ fijado\ como\ color\ de\ dibujo\ para\ la\ ventana.\n@param\ x\ coordenada\ de\ columna\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ y\ coordenada\ de\ fila\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ width\ ancho\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ height\ alto\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ startAngle\ el\ \u00E1ngulo\ de\ inicio\ del\ arco\ a\ dibujar.\n@param\ arcAngle\ el\ \u00E1ngulo\ que\ ser\u00E1\ barrido\ por\ el\ arco.\n\n
comment12.params=x1\ y1\ x2\ y2
comment12.target=void\ drawLine(int,\ int,\ int,\ int)
comment12.text=\nDibuja\ una\ l\u00EDnea,\ comenzando\ desde\ el\ punto\ (x1,\ y1)\ y\ terminando\ en\ el\ \npunto\ (x2,\ y2).\ El\ color\ usado\ ser\u00E1\ el\ que\ en\ ese\ momento\ est\u00E9\ fijado\ como\ \ncolor\ de\ dibujo\ para\ la\ ventana.\n@param\ x1\ coordenada\ de\ columna\ del\ punto\ inicial\ de\ la\ l\u00EDnea.\n@param\ y1\ coordenada\ de\ fila\ del\ punto\ inicial.\n@param\ x2\ coordenada\ de\ columna\ del\ punto\ final\ de\ la\ l\u00EDnea.\n@param\ y2\ coordenada\ de\ fila\ del\ punto\ final.\n\n
comment13.params=x\ y\ width\ height
comment13.target=void\ drawOval(int,\ int,\ int,\ int)
comment13.text=\nDibuja\ el\ contorno\ de\ un\ c\u00EDrculo\ o\ de\ una\ elipse,\ inscripta\ en\ el\ rect\u00E1ngulo\ndado.\ Los\ l\u00EDmites\ izquierdo\ y\ derecho\ del\ rect\u00E1ngulo\ son\ (x)\ y\ (x\ +\ width)\ \nrespectivamente.\ Los\ l\u00EDmites\ superior\ e\ inferior\ del\ rect\u00E1ngulo\ son\ (y)\ y\ \n(y\ +\ height)\ respectivamente.\ El\ color\ usado\ ser\u00E1\ el\ que\ en\ ese\ momento\ est\u00E9\ \nfijado\ como\ color\ de\ dibujo\ para\ la\ ventana.\n@param\ x\ coordenada\ de\ columna\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ y\ coordenada\ de\ fila\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ width\ ancho\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ height\ alto\ (en\ pixels)\ del\ rect\u00E1ngulo.\n\n
comment14.params=xPoints\ yPoints\ n
comment14.target=void\ drawPolygon(int[],\ int[],\ int)
comment14.text=\nDibuja\ un\ pol\u00EDgono\ cerrado\ con\ (n)\ puntos\ a\ modo\ de\ v\u00E9rtices.\ Las\ \ncoordenadas\ (x,\ y)\ de\ cada\ uno\ de\ los\ (n)\ puntos\ est\u00E1n\ dadas\ por\ los\ \narreglos\ (xPoints)\ e\ (yPoints).\ Autom\u00E1ticamente\ ser\u00E1\ trazada\ una\ l\u00EDnea\npara\ unir\ el\ \u00FAltimo\ punto\ con\ el\ primero,\ salvo\ que\ se\ trate\ del\ mismo\ \npunto.\ El\ color\ usado\ ser\u00E1\ el\ que\ en\ ese\ momento\ est\u00E9\ fijado\ como\ color\ \nde\ dibujo\ para\ la\ ventana.\n@param\ xPoints\ un\ arreglo\ con\ los\ valores\ de\ las\ coordenadas\ de\ columna\ de\nlos\ puntos\ v\u00E9rtice\ del\ pol\u00EDgono.\n@param\ yPoints\ un\ arreglo\ con\ los\ valores\ de\ las\ coordenadas\ de\ fila\ de\nlos\ puntos\ v\u00E9rtice\ del\ pol\u00EDgono.\n@param\ n\ la\ cantidad\ de\ puntos\ a\ usar\ para\ dibujar\ el\ poligono.\n\n
comment15.params=x\ y\ width\ height
comment15.target=void\ drawRect(int,\ int,\ int,\ int)
comment15.text=\nDibuja\ el\ contorno\ de\ un\ rect\u00E1ngulo.\ Los\ l\u00EDmites\ izquierdo\ y\ derecho\ del\ \nrect\u00E1ngulo\ son\ (x)\ y\ (x\ +\ width)\ respectivamente.\ Los\ l\u00EDmites\ superior\ e\ \ninferior\ del\ rect\u00E1ngulo\ son\ (y)\ y\ (y\ +\ height)\ respectivamente.\ El\ color\nusado\ ser\u00E1\ el\ que\ en\ ese\ momento\ est\u00E9\ fijado\ como\ color\ de\ dibujo\ para\nla\ ventana.\n@param\ x\ coordenada\ de\ columna\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ y\ coordenada\ de\ fila\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ width\ ancho\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ height\ alto\ (en\ pixels)\ del\ rect\u00E1ngulo.\n\n
comment16.params=x\ y\ width\ height\ arcWidth\ arcHeight
comment16.target=void\ drawRoundRect(int,\ int,\ int,\ int,\ int,\ int)
comment16.text=\nDibuja\ el\ contorno\ de\ un\ rect\u00E1ngulo\ con\ bordes\ redondeados.\ Los\ l\u00EDmites\ \nizquierdo\ y\ derecho\ del\ rect\u00E1ngulo\ son\ (x)\ y\ (x\ +\ width)\ respectivamente.\ \nLos\ l\u00EDmites\ superior\ e\ inferior\ del\ rect\u00E1ngulo\ son\ (y)\ y\ (y\ +\ height)\ \nrespectivamente.\ El\ color\ usado\ ser\u00E1\ el\ que\ en\ ese\ momento\ est\u00E9\ fijado\ \ncomo\ color\ de\ dibujo\ para\ la\ ventana.\n@param\ x\ coordenada\ de\ columna\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ y\ coordenada\ de\ fila\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ width\ ancho\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ height\ alto\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ arcWidth\ di\u00E1metro\ horizontal\ del\ arco\ usado\ en\ cada\ esquina.\n@param\ arcHeight\ di\u00E1metro\ vertical\ del\ arco\ usado\ en\ cada\ esquina.\n\n
comment17.params=s\ x\ y
comment17.target=void\ drawString(String,\ int,\ int)
comment17.text=\nDibuja\ (muestra...)\ el\ contenido\ de\ la\ cadena\ (s)\ usando\ la\ fuente\ y\ el\ color\nactualmente\ activados\ en\ la\ ventana.\ La\ l\u00EDnea\ base\ del\ caracter\ m\u00E1s\ a\ la\ izquierda\nde\ la\ cadena\ se\ ubicar\u00E1\ en\ la\ posici\u00F3n\ (x,\ y).\ \ \n@param\ s\ la\ cadena\ a\ dibujar.\n@param\ x\ la\ coordenada\ x\ (columna).\n@param\ y\ la\ coordenada\ y\ (fila).\ \n\n
comment18.params=x\ y\ width\ height\ raised
comment18.target=void\ fill3DRect(int,\ int,\ int,\ int,\ boolean)
comment18.text=\nDibuja\ y\ rellena\ (pinta\ por\ dentro)\ un\ rect\u00E1ngulo\ con\ bordes\ trabajados\ \npara\ simular\ un\ efecto\ de\ sobre\ relieve\ (raised\ \=\ true)\ o\ bajo\ relieve\ \n(raised\ \=\ false).\ Los\ l\u00EDmites\ izquierdo\ y\ derecho\ del\ rect\u00E1ngulo\ son\ (x)\ \ny\ (x\ +\ width)\ respectivamente,\ aunque\ gr\u00E1ficamente\ el\ rect\u00E1ngulo\ acupar\u00E1\ un\ \n\u00E1rea\ que\ llegar\u00E1\ hasta\ (width\ +\ 1)\ y\ (height\ +\ 1).\ Los\ l\u00EDmites\ superior\ e\ \ninferior\ del\ rect\u00E1ngulo\ son\ (y)\ y\ (y\ +\ height)\ respectivamente.\ El\ color\ \nusado\ ser\u00E1\ el\ que\ en\ ese\ momento\ est\u00E9\ fijado\ como\ color\ de\ dibujo\ para\ la\ \nventana.\n@param\ x\ coordenada\ de\ columna\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ y\ coordenada\ de\ fila\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ width\ ancho\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ height\ alto\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ raised\ un\ boolean\ para\ indicar\ si\ el\ rect\u00E1ngulo\ debe\ aparecer\ elevado\ o\nhundido\ en\ la\ ventana.\n\n
comment19.params=x\ y\ width\ height\ startAngle\ arcAngle
comment19.target=void\ fillArc(int,\ int,\ int,\ int,\ int,\ int)
comment19.text=\nDibuja\ y\ rellena\ un\ arco\ circular\ o\ el\u00EDptico,\ dentro\ de\ los\ l\u00EDmites\ del\ \nrect\u00E1ngulo\ indicado.\ Los\ l\u00EDmites\ izquierdo\ y\ derecho\ del\ rect\u00E1ngulo\ son\ (x)\ \ny\ (x\ +\ width)\ respectivamente.\ Los\ l\u00EDmites\ superior\ e\ inferior\ del\ rect\u00E1ngulo\ \nson\ (y)\ y\ (y\ +\ height)\ respectivamente.\ El\ arco\ comienza\ a\ dibujarse\ desde\ el\ \n\u00E1ngulo\ indicado\ por\ (startAngle)\ y\ proseguir\u00E1\ hasta\ barrer\ un\ \u00E1ngulo\ equivalente\ \na\ (arcAngle).\ El\ color\ usado\ ser\u00E1\ el\ que\ en\ ese\ momento\ est\u00E9\ fijado\ como\ color\ \nde\ dibujo\ para\ la\ ventana.\n@param\ x\ coordenada\ de\ columna\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ y\ coordenada\ de\ fila\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ width\ ancho\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ height\ alto\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ startAngle\ el\ \u00E1ngulo\ de\ inicio\ del\ arco\ a\ dibujar.\n@param\ arcAngle\ el\ \u00E1ngulo\ que\ ser\u00E1\ barrido\ por\ el\ arco.\n\n
comment2.target=void\ setInitialLook()
comment20.params=x\ y\ width\ height
comment20.target=void\ fillOval(int,\ int,\ int,\ int)
comment20.text=\nDibuja\ un\ c\u00EDrculo\ o\ una\ elipse,\ pintada\ por\ dentro\ e\ inscripta\ en\ el\ rect\u00E1ngulo\ndado.\ Los\ l\u00EDmites\ izquierdo\ y\ derecho\ del\ rect\u00E1ngulo\ son\ (x)\ y\ (x\ +\ width)\ \nrespectivamente.\ Los\ l\u00EDmites\ superior\ e\ inferior\ del\ rect\u00E1ngulo\ son\ (y)\ y\ \n(y\ +\ height)\ respectivamente.\ El\ color\ usado\ ser\u00E1\ el\ que\ en\ ese\ momento\ est\u00E9\ \nfijado\ como\ color\ de\ dibujo\ para\ la\ ventana.\n@param\ x\ coordenada\ de\ columna\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ y\ coordenada\ de\ fila\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ width\ ancho\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ height\ alto\ (en\ pixels)\ del\ rect\u00E1ngulo.\n\n
comment21.params=xPoints\ yPoints\ n
comment21.target=void\ fillPolygon(int[],\ int[],\ int)
comment21.text=\nDibuja\ un\ pol\u00EDgono\ cerrado\ y\ pintado\ por\ dentro\ con\ (n)\ puntos\ a\ modo\ \nde\ v\u00E9rtices.\ Las\ coordenadas\ (x,\ y)\ de\ cada\ uno\ de\ los\ (n)\ puntos\ est\u00E1n\ \ndadas\ por\ los\ arreglos\ (xPoints)\ e\ (yPoints).\ Autom\u00E1ticamente\ ser\u00E1\ trazada\ \nuna\ l\u00EDnea\ para\ unir\ el\ \u00FAltimo\ punto\ con\ el\ primero,\ salvo\ que\ se\ trate\ del\ \nmismo\ punto.\ El\ color\ usado\ ser\u00E1\ el\ que\ en\ ese\ momento\ est\u00E9\ fijado\ como\ color\ \nde\ dibujo\ para\ la\ ventana.\n@param\ xPoints\ un\ arreglo\ con\ los\ valores\ de\ las\ coordenadas\ de\ columna\ de\nlos\ puntos\ v\u00E9rtice\ del\ pol\u00EDgono.\n@param\ yPoints\ un\ arreglo\ con\ los\ valores\ de\ las\ coordenadas\ de\ fila\ de\nlos\ puntos\ v\u00E9rtice\ del\ pol\u00EDgono.\n@param\ n\ la\ cantidad\ de\ puntos\ a\ usar\ para\ dibujar\ el\ poligono.\n\n
comment22.params=x\ y\ width\ height
comment22.target=void\ fillRect(int,\ int,\ int,\ int)
comment22.text=\nDibuja\ un\ rect\u00E1ngulo\ pintado\ por\ dentro.\ Los\ l\u00EDmites\ izquierdo\ y\ derecho\ del\ \nrect\u00E1ngulo\ son\ (x)\ y\ (x\ +\ width)\ respectivamente.\ Los\ l\u00EDmites\ superior\ e\ \ninferior\ del\ rect\u00E1ngulo\ son\ (y)\ y\ (y\ +\ height)\ respectivamente.\ El\ color\nusado\ ser\u00E1\ el\ que\ en\ ese\ momento\ est\u00E9\ fijado\ como\ color\ de\ dibujo\ para\nla\ ventana.\n@param\ x\ coordenada\ de\ columna\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ y\ coordenada\ de\ fila\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ width\ ancho\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ height\ alto\ (en\ pixels)\ del\ rect\u00E1ngulo.\n\n
comment23.params=x\ y\ width\ height\ arcWidth\ arcHeight
comment23.target=void\ fillRoundRect(int,\ int,\ int,\ int,\ int,\ int)
comment23.text=\nDibuja\ un\ rect\u00E1ngulo\ pintado\ por\ dentro,\ con\ los\ bordes\ redondeados.\ Los\ \nl\u00EDmites\ izquierdo\ y\ derecho\ del\ rect\u00E1ngulo\ son\ (x)\ y\ (x\ +\ width)\ \nrespectivamente.\ Los\ l\u00EDmites\ superior\ e\ inferior\ del\ rect\u00E1ngulo\ son\ (y)\ \ny\ (y\ +\ height)\ respectivamente.\ El\ color\ usado\ ser\u00E1\ el\ que\ en\ ese\ momento\ \nest\u00E9\ fijado\ como\ color\ de\ dibujo\ para\ la\ ventana.\n@param\ x\ coordenada\ de\ columna\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ y\ coordenada\ de\ fila\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ width\ ancho\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ height\ alto\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ arcWidth\ di\u00E1metro\ horizontal\ del\ arco\ usado\ en\ cada\ esquina.\n@param\ arcHeight\ di\u00E1metro\ vertical\ del\ arco\ usado\ en\ cada\ esquina.\n\n
comment24.target=Color\ getColor()
comment24.text=\nRetorna\ el\ color\ actualmente\ usado\ en\ esta\ ventana.\n@return\ un\ objeto\ Color\ que\ representa\ al\ color\ actual.\n\n
comment25.target=Font\ getFont()
comment25.text=\nRetorna\ la\ fuente\ de\ caracteres\ actualmente\ usada\ en\ esta\ ventana.\n@return\ un\ objeto\ Font\ que\ representa\ a\ la\ fuente\ actual.\n\n
comment26.target=FontMetrics\ getFontMetrics()
comment26.text=\nRetorna\ las\ m\u00E9tricas\ de\ la\ fuente\ de\ caracteres\ actualmente\ usada\ en\ \nesta\ ventana.\n@return\ un\ objeto\ FontMetrics\ que\ permite\ acceder\ a\ las\ propiedades\ de\ la\ \nfuente\ actual.\n\n
comment27.params=c
comment27.target=void\ setColor(Color)
comment27.text=\nCambia\ el\ color\ de\ dibujo.\ El\ color\ usado\ desde\ la\ invocaci\u00F3n\ a\ este\ m\u00E9todo\ \nen\ adelante,\ ser\u00E1\ el\ color\ (c)\ tomado\ como\ par\u00E1metro.\n@param\ c\ el\ nuevo\ color\ a\ usar.\n\n
comment28.params=f
comment28.target=void\ setFont(Font)
comment28.text=\nCambia\ el\ tipo\ de\ fuente\ usado\ para\ mostrar\ texto\ en\ esta\ ventana.\n@param\ f\ un\ objeto\ representando\ a\ la\ nueva\ fuente.\n\n
comment29.params=x\ y
comment29.target=void\ translate(int,\ int)
comment29.text=\nCambia\ origen\ de\ coordenadas\ del\ contexto\ gr\u00E1fico\ usado,\ de\ forma\ que\ el\ \nnuevo\ origen\ coincidir\u00E1\ con\ (x,\ y).\ Todas\ las\ coordenadas\ usadas\ de\ aqu\u00ED\ \nen\ adelante\ ser\u00E1n\ relativas\ al\ nuevo\ origen.\n@param\ x\ la\ coordenada\ x\ del\ nuevo\ origen.\n@param\ y\ la\ coordenada\ x\ del\ nuevo\ origen.\n\n
comment3.target=void\ initGraphicArea()
comment4.target=void\ initButton()
comment5.target=void\ doExit()
comment6.target=void\ doHelp()
comment7.target=GraphicsConsole\ getInstance()
comment7.text=\nObtiene\ el\ \u00FAnico\ objeto\ existente\ de\ la\ clase\ GraphicsConsole.\ \nSe\ aplica\ el\ patr\u00F3n\ Singleton.\n@return\ el\ \u00FAnico\ objeto\ GraphicsConsole\ que\ la\ clase\ permite\ crear.\n\n
comment8.params=x\ y\ width\ height
comment8.target=void\ clearRect(int,\ int,\ int,\ int)
comment8.text=\nBorra\ el\ contenido\ del\ \u00E1rea\ rectangular\ especificada\ por\ los\ par\u00E1metros.\ \nLos\ l\u00EDmites\ izquierdo\ y\ derecho\ del\ \u00E1rea\ rectangular\ a\ limpiar\ son\ (x)\ y\ \n(x\ +\ width)\ respectivamente.\ Los\ l\u00EDmites\ superior\ e\ inferior\ del\ rect\u00E1ngulo\ \nson\ (y)\ y\ (y\ +\ height)\ respectivamente.\ Note\ que\ el\ \u00E1rea\ ser\u00E1\ rellenada\ con\ \nel\ color\ usado\ hasta\ ese\ momento\ como\ color\ de\ dibujo\ para\ la\ ventana.\ \n@param\ x\ coordenada\ de\ columna\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ y\ coordenada\ de\ fila\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ width\ ancho\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ height\ alto\ (en\ pixels)\ del\ rect\u00E1ngulo.\n\n
comment9.params=x\ y\ width\ height\ dx\ dy
comment9.target=void\ copyArea(int,\ int,\ int,\ int,\ int,\ int)
comment9.text=\nCopia\ el\ contenido\ del\ \u00E1rea\ en\ el\ rect\u00E1ngulo\ indicado,\ hacia\ otra\ \u00E1rea\ \ndesplazada\ en\ dx\ y\ dy\ pixels.\ El\ desplazamiento\ se\ har\u00E1\ de\ arriba\ hacia\ \nabajo\ y\ hacia\ la\ derecha.\ Si\ se\ desea\ un\ desplazamiento\ hacia\ arriba\ o\ \nhacia\ la\ izquierda,\ especifique\ valores\ negativos\ para\ dx\ y\ dy.\nLos\ l\u00EDmites\ izquierdo\ y\ derecho\ del\ \u00E1rea\ rectangular\ a\ copiar\ son\ (x)\ y\ \n(x\ +\ width)\ respectivamente.\ Los\ l\u00EDmites\ superior\ e\ inferior\ del\ rect\u00E1ngulo\ \nson\ (y)\ y\ (y\ +\ height)\ respectivamente.\ \n@param\ x\ coordenada\ de\ columna\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ y\ coordenada\ de\ fila\ del\ punto\ superior\ izquierdo\ del\ rect\u00E1ngulo.\n@param\ width\ ancho\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ height\ alto\ (en\ pixels)\ del\ rect\u00E1ngulo.\n@param\ dx\ desplazamiento\ horizontal\ para\ copiar\ los\ pixels.\n@param\ dy\ desplazamiento\ vertical\ para\ copiar\ los\ pixels.\n\n
numComments=30
