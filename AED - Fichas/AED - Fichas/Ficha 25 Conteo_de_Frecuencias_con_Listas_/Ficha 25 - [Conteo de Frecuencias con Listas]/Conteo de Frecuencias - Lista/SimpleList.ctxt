#BlueJ class context
comment0.target=SimpleList()
comment0.text=\nConstructor\ por\ defecto\n\n
comment1.params=x
comment1.target=void\ addFirst(Contador)
comment1.text=\nInserta\ un\ nodo\ al\ principio\ de\ la\ lista.\ No\ ser\u00E1\ insertado\ el\ nodo\ si\ el\ par\u00E1metro\ \nenviado\ es\ null.\n@param\ x\ el\ info\ del\ nodo\ a\ almacenar\ en\ la\ lista.\n\n
comment10.target=Contador\ removeLast()
comment10.text=\nRetorna\ (y\ remueve)\ el\ valor\ ubicado\ al\ final\ de\ la\ lista.\ \n@return\ el\ \u00FAltimo\ elemento\ de\ la\ lista,\ o\ null\ si\ la\ lista\ estaba\ vac\u00EDa.\n\n
comment11.params=x
comment11.target=Contador\ search(Contador)
comment11.text=\nBusca\ un\ objeto\ x\ de\ tipo\ Contador\ en\ la\ lista,\ y\ en\ caso\ de\ encontrarlo\ retorna\ una\ \nreferencia\ al\ objeto\ Contador\ QUE\ ESTABA\ EN\ LA\ LISTA.\ Retorna\ null\ si\ x\ no\ est\u00E1\ en\ \nla\ lista\ o\ si\ x\ era\ null.\ \n@param\ x\ el\ objeto\ a\ buscar.\n@return\ una\ referencia\ al\ objeto\ que\ estaba\ en\ la\ lista,\ o\ null\ si\ x\ no\ existe\ o\ es\ null.\n\n
comment12.target=String\ toString()
comment12.text=\nRedefine\ el\ m\u00E9todo\ toString\ heredado\ desde\ Object.\n@return\ el\ contenido\ de\ la\ lista\ convertido\ a\ String.\n\n
comment2.target=void\ clear()
comment2.text=\nRemueve\ todos\ los\ elementos\ de\ la\ lista.\n\n
comment3.params=x
comment3.target=boolean\ contains(Contador)
comment3.text=\nDetermina\ si\ en\ la\ lista\ existe\ un\ elemento\ que\ coincida\ con\ x.\ \n@return\ true\ si\ x\ est\u00E1\ en\ la\ lista\ -\ false\ si\ x\ no\ est\u00E1.\n@param\ x\ el\ n\u00FAmero\ a\ buscar.\n\n
comment4.target=Contador\ getFirst()
comment4.text=\nRetorna\ (pero\ sin\ removerlo)\ el\ info\ del\ nodo\ ubicado\ al\ principio\ de\ la\ lista.\ \n@return\ el\ info\ del\ primer\ elemento\ de\ la\ lista.\ Si\ la\ lista\ estaba\ vac\u00EDa,\ retorna\ null.\n\n
comment5.target=boolean\ isEmpty()
comment5.text=\nRetorna\ true\ si\ la\ lista\ est\u00E1\ vac\u00EDa.\n@return\ true\ si\ la\ lista\ est\u00E1\ vac\u00EDa\ -\ false\ en\ caso\ contrario.\n\n
comment6.target=Contador\ removeFirst()
comment6.text=\nRetorna\ (y\ remueve)\ el\ info\ del\ nodo\ ubicado\ al\ principio\ de\ la\ lista.\ \n@return\ el\ primer\ elemento\ de\ la\ lista.\ Si\ la\ lista\ estaba\ vac\u00EDa,\ retorna\ null.\n\n
comment7.params=x
comment7.target=void\ addInOrder(Contador)
comment7.text=\nInserta\ un\ objeto\ Contador\ en\ forma\ ordenada\ en\ la\ lista,\ por\ dni.\ Se\ supone\ que\ la\ \nlista\ est\u00E1\ ya\ ordenada\ (es\ decir,\ se\ supone\ que\ todas\ las\ inserciones\ fueron\ realizadas\ \nllamando\ a\ este\ m\u00E9todo).\ \n@param\ x\ el\ objeto\ Contador\ a\ almacenar\ en\ la\ lista.\n\n
comment8.params=x
comment8.target=void\ addLast(Contador)
comment8.text=\nInserta\ un\ valor\ al\ final\ de\ la\ lista.\ \n@param\ x\ el\ valor\ a\ almacenar\ en\ la\ lista.\n\n
comment9.target=Contador\ getLast()
comment9.text=\nRetorna\ (pero\ sin\ removerlo)\ el\ valor\ ubicado\ al\ final\ de\ la\ lista.\ \n@return\ el\ valor\ del\ \u00FAltimo\ elemento\ de\ la\ lista,\ o\ null\ si\ la\ lista\ estaba\ vac\u00EDa.\n\n
numComments=13
