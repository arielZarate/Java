#BlueJ class context
comment0.target=Stack()
comment0.text=\nCrea\ una\ pila\ con\ capacidad\ para\ hasta\ 10\ valores.\n\n
comment1.params=n
comment1.target=Stack(int)
comment1.text=\nCrea\ una\ pila\ con\ capacidad\ para\ hasta\ n\ valores.\ \n@param\ n\ la\ capacidad\ de\ la\ pila\ a\ crear.\ Si\ este\ valor\ es\ negativo\ o\ cero,\ crea\ \nuna\ pila\ de\ capacidad\ 10.\n\n
comment2.target=boolean\ empty()
comment2.text=\nDetermina\ si\ la\ pila\ est\u00E1\ vac\u00EDa.\n@return\ true\ si\ la\ pila\ no\ contiene\ ning\u00FAn\ elemento,\ o\ false\ en\ caso\ contrario.\n\n
comment3.target=char\ peek()
comment3.text=\nRetorna\ una\ copia\ del\ primer\ elemento\ de\ la\ pila,\ sin\ removerlo\ de\ la\ misma.\ Si\ la\npila\ estaba\ vac\u00EDa,\ retorna\ el\ caracter\ nulo\ ('\u0000').\n@returns\ una\ copia\ del\ valor\ ubicado\ en\ el\ tope\ de\ la\ pila,\ o\ el\ valor\ \u0000\ si\ la\npila\ estaba\ vac\u00EDa.\n\n
comment4.target=char\ pop()
comment4.text=\nRemueve\ y\ retorna\ el\ primer\ elemento\ de\ la\ pila.\ Si\ la\ pila\ estaba\ vac\u00EDa,\ retorna\ \nel\ caracter\ nulo\ ('\u0000').\n@returns\ el\ valor\ ubicado\ en\ el\ tope\ de\ la\ pila,\ o\ el\ valor\ \u0000\ si\ la\ pila\ estaba\ \nvac\u00EDa.\ El\ elemento\ se\ elimina\ de\ la\ pila.\n\n
comment5.params=x
comment5.target=boolean\ push(char)
comment5.text=\nAgrega\ el\ valor\ x\ en\ el\ tope\ de\ la\ pila,\ si\ la\ pila\ ten\u00EDa\ lugar\ para\ hacerlo.\ \n@returns\ true\ si\ la\ operaci\u00F3n\ pudo\ hacerse,\ \ false\ en\ caso\ contrario.\n\n
comment6.target=String\ toString()
comment6.text=\nRetorna\ una\ representaci\u00F3n\ en\ forma\ de\ String\ del\ contenido\ de\ la\ pila.\ Redefine\nal\ m\u00E9todo\ heredado\ desde\ Object.\n@returns\ una\ representaci\u00F3n\ de\ la\ pila\ en\ forma\ de\ String.\n\n
numComments=7
